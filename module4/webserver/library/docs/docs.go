// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/createAuthor": {
            "post": {
                "summary": "Create new Author",
                "operationId": "author-create-handler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Author name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/main.Author"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Invalid data"
                    }
                }
            }
        },
        "/createBook": {
            "post": {
                "summary": "Create new book",
                "operationId": "book-create-handler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "book title",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Author ID",
                        "name": "author_id",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/main.Book"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Invalid data"
                    }
                }
            }
        },
        "/getAuthors": {
            "get": {
                "description": "Получение авторов вместе с их книгами.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetAuthors",
                "operationId": "authors-get-handler",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/main.Author"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/getBooks": {
            "get": {
                "description": "Получение всех книг вместе с авторами.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetBooks",
                "operationId": "books-get-handler",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/main.Book"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/getUsers": {
            "get": {
                "description": "Получение пользователей вместе с книгами.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetUsers",
                "operationId": "users-get-handler",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/main.User"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/takeBook": {
            "post": {
                "summary": "Take a book",
                "operationId": "book-take-handler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book ID",
                        "name": "book_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/main.Book"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Invalid data"
                    }
                }
            }
        }
    },
    "definitions": {
        "main.Author": {
            "type": "object",
            "properties": {
                "books": {
                    "description": "связь с таблицей книги",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.Book"
                    }
                },
                "id": {
                    "description": "ID как первичный ключ",
                    "type": "integer"
                },
                "name": {
                    "description": "имя автора",
                    "type": "string"
                }
            }
        },
        "main.Book": {
            "type": "object",
            "properties": {
                "author": {
                    "description": "связь с таблицей автор",
                    "allOf": [
                        {
                            "$ref": "#/definitions/main.Author"
                        }
                    ]
                },
                "authorID": {
                    "description": "ID автора как внешний ключ",
                    "type": "integer"
                },
                "id": {
                    "description": "ID как первичный ключ",
                    "type": "integer"
                },
                "title": {
                    "description": "название книги",
                    "type": "string"
                },
                "user": {
                    "description": "связь с таблицей пользователь",
                    "allOf": [
                        {
                            "$ref": "#/definitions/main.User"
                        }
                    ]
                },
                "userID": {
                    "description": "ID пользователя как внешний ключ",
                    "type": "integer"
                }
            }
        },
        "main.User": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "ID как первичный ключ",
                    "type": "integer"
                },
                "name": {
                    "description": "имя пользователя",
                    "type": "string"
                },
                "rentedBooks": {
                    "description": "связь с таблицей книги",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.Book"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Library Rest API",
	Description:      "copy of the swagger Library",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}

package main

import (
	"fmt"
	"strings"
)

var data = ` –°–æ–æ–±—â–µ–Ω–∏—è —Å —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª–∞ Go-go!
—è, –∏–∑–≤–∏–Ω–∏—Ç–µ, —Ä–µ—à–∏–ª, —á—Ç–æ –≤—ã —Ö–æ—Ç—å —á—Ç–æ-—Ç–æ –ø—Ä–æ —Ä–µ–≥—É–ª—è—Ä–∫–∏ –∑–Ω–∞–µ—Ç–µ üôÇ
–° –ü–æ—á—Ç–µ–Ω–∏–µ–º, —Å —É–≤–∞–∂–µ–Ω–∏–µ–º üôÇ.

–°–æ–æ–±—â–µ–Ω–∏—è —Å —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª–∞ Go-get job:
#–í–∞–∫–∞–Ω—Å–∏—è #Vacancy #–£–¥–∞–ª–µ–Ω–Ω–æ #Remote #Golang #Backend  
üë®‚Äçüíª  –î–æ–ª–∂–Ω–æ—Å—Ç—å: Golang Tech Lead
üè¢  –ö–æ–º–ø–∞–Ω–∏—è: PointPay
üíµ  –í–∏–ª–∫–∞: –æ—Ç 9000 –¥–æ 15000 $ –¥–æ –≤—ã—á–µ—Ç–∞ –Ω–∞–ª–æ–≥–æ–≤
üåè  –õ–æ–∫–∞—Ü–∏—è: –í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è
üíº  –§–æ—Ä–º–∞—Ç —Ä–∞–±–æ—Ç—ã: —É–¥–∞–ª–µ–Ω–Ω—ã–π
üíº  –ó–∞–Ω—è—Ç–æ—Å—Ç—å: –ø–æ–ª–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å 

–ù–∞—à–∞ –∫–æ–º–ø–∞–Ω–∏—è —Ä–∞–∑–≤–∏–≤–∞–µ—Ç 15 –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –≤ —Å—Ñ–µ—Ä–µ –±–ª–æ–∫—á–µ–π–Ω –∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã, —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É—é—â–∏—Ö –≤ —Ä–∞–º–∫–∞—Ö –µ–¥–∏–Ω–æ–π —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã. –ú—ã - –æ–¥–Ω–∏ –∏–∑ –ª—É—á—à–∏—Ö –≤ —Å–≤–æ–µ–π –Ω–∏—à–µ, –∏ –∑–∞ –±–µ–∑ –º–∞–ª–æ–≥–æ —Ç—Ä–∏ –≥–æ–¥–∞ –º—ã —Å–æ–∑–¥–∞–ª–∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—É—é –ø–ª–∞—Ç—Ñ–æ—Ä–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –∏ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –ø—Ä–æ–≤–æ–¥–∏—Ç—å –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –ª—é–±—ã–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏.
–ù–∞—à –ø—Ä–æ–µ–∫—Ç –ø–æ–±–µ–¥–∏–ª –≤ –Ω–æ–º–∏–Ω–∞—Ü–∏–∏ "–ª—É—á—à–∏–π –±–ª–æ–∫—á–µ–π–Ω-—Å—Ç–∞—Ä—Ç–∞–ø 2019 –≥–æ–¥–∞" –Ω–∞ –æ–¥–Ω–æ–π –∏–∑ —Å–∞–º—ã—Ö –∫—Ä—É–ø–Ω—ã—Ö –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–π –ø–æ –±–ª–æ–∫—á–µ–π–Ω, –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞–º –∏ –º–∞–π–Ω–∏–Ω–≥—É ‚Äì Blockchain Life –≤ –ú–æ—Å–∫–≤–µ.

–£ –Ω–∞—Å –æ—á–µ–Ω—å –∞–º–±–∏—Ü–∏–æ–∑–Ω—ã–µ –ø–ª–∞–Ω—ã –ø–æ —Ä–∞–∑–≤–∏—Ç–∏—é –Ω–∞—à–∏—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤, –∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –º—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è –≤ –ø–æ–∏—Å–∫–µ Golang Technical Lead, —á—Ç–æ–±—ã –≤–º–µ—Å—Ç–µ —Å–æ–∑–¥–∞—Ç—å —Ä–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω—ã–π –∏ —Å–∞–º—ã–π —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç –≤ –º–∏—Ä–µ.


  
–ú—ã –æ–∂–∏–¥–∞–µ–º –æ—Ç —Ç–µ–±—è:  
  
‚úÖ –û–ø—ã—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–º–∏ IT –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏;
‚úÖ –û–ø—ã—Ç –ø–æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–¥–∞—á —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –∫–æ–º–∞–Ω–¥–µ –∏ –ø—Ä–∏–µ–º–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤;
‚úÖ –ü–æ–Ω–∏–º–∞–Ω–∏–µ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø–æ–¥—Ö–æ–¥–æ–≤ –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ (Agile);
‚úÖ –û–ø—ã—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ –º–µ–Ω–µ–µ 5 –ª–µ—Ç;
‚úÖ –û—Ç–ª–∏—á–Ω–æ–µ –≤–ª–∞–¥–µ–Ω–∏–µ Go, –±—É–¥–µ—Ç –ø–ª—é—Å–æ–º –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã –Ω–∞ PHP;
‚úÖ –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã —Å REST / GRP–° (protobuf);
‚úÖ –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã —Å Laravel;
‚úÖ –û—Ç–ª–∏—á–Ω—ã–µ –Ω–∞–≤—ã–∫–∏ SQL (–º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º PostgreSQL);
‚úÖ –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã —Å Redis –∏–ª–∏ –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è;
‚úÖ –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã —Å Kubernetes, —Å –±—Ä–æ–∫–µ—Ä–∞–º–∏ —Å–æ–æ–±—â–µ–Ω–∏–π (RabbitMQ, Kafka –∏ –¥—Ä.);
‚úÖ –ë–∞–∑–æ–≤—ã–µ –∑–Ω–∞–Ω–∏—è Amazon Web Services.

–ë—É–¥–µ–º –ø–ª—é—Å–æ–º:

‚úÖ –û–ø—ã—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã—Ö –∫–æ—à–µ–ª—å–∫–æ–≤ / –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã—Ö –±–∏—Ä–∂ / –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã—Ö —Ç–æ—Ä–≥–æ–≤—ã—Ö —Ä–æ–±–æ—Ç–æ–≤ / –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö —Å–∏—Å—Ç–µ–º –∏–ª–∏ –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã –≤ FinTech –∏–ª–∏ –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö –ø—Ä–æ–¥—É–∫—Ç–∞—Ö.

–ß–µ–º –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç –∑–∞–Ω–∏–º–∞—Ç—å—Å—è:  
  
üìå –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ–º —Å –∫–æ–º–∞–Ω–¥–æ–π;
üìå –ü–æ—Å—Ç–∞–Ω–æ–≤–∫–æ–π –∑–∞–¥–∞—á –∫–æ–º–∞–Ω–¥–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤;
üìå –†–∞–∑—Ä–∞–±–æ—Ç–∫–æ–π —Ä–µ—à–µ–Ω–∏–π –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∏ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏—è —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º–æ–≥–æ –∫–æ–º–ø–∞–Ω–∏–µ–π –ü–û;
üìå –í—ã—Å—Ç—Ä–∞–∏–≤–∞–Ω–∏–µ–º —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏;
üìå –î–æ—Å—Ç–∏–≥–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –∏ —Ä–∞–∑–≤–∏–≤–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –ø—Ä–æ–µ–∫—Ç—ã, —Ä–∞–∑–≤–∏–≤–∞—Ç—å –Ω–æ–≤—ã–µ –ø—Ä–æ–µ–∫—Ç—ã –∏ –ø—Ä–æ–¥—É–∫—Ç—ã, –∏—Å–∫–∞—Ç—å –∏ –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á.

–ú—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –±—É–¥—É—â–µ–º—É –∫–æ–ª–ª–µ–≥–µ:  
  
üî• –í—ã—Å–æ–∫—É—é –∑–∞—Ä–∞–±–æ—Ç–Ω—É—é –ø–ª–∞—Ç—É –¥–æ 15 000$ (–≤ –≤–∞–ª—é—Ç–µ);
üî• –ò–Ω–¥–µ–∫—Å–∞—Ü–∏—é –∑–∞—Ä–∞–±–æ—Ç–Ω–æ–π –ø–ª–∞—Ç—ã;
üî• –ü–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–µ–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ä–∞–±–æ—Ç—ã –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –≥–∏–±–∫–∏–π –≥—Ä–∞—Ñ–∏–∫ - —Ä–∞–±–æ—Ç–∞–π—Ç–µ –∏–∑ –ª—é–±–æ–π —Ç–æ—á–∫–∏ –º–∏—Ä–∞ –≤ —É–¥–æ–±–Ω–æ–µ –≤–∞–º –≤—Ä–µ–º—è;
üî• –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –ø–æ –±–µ—Å—Å—Ä–æ—á–Ω–æ–º—É –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–º—É —Ç—Ä—É–¥–æ–≤–æ–º—É –¥–æ–≥–æ–≤–æ—Ä—É —Å UK;
üî• –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –±—é—Ä–æ–∫—Ä–∞—Ç–∏–∏ –∏ –∫—É—á–∏ –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω—ã—Ö –∑–≤–æ–Ω–∫–æ–≤;
üî• –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –∑–∞ —Å—á–µ—Ç –∫–æ–º–ø–∞–Ω–∏–∏;
üî• –°–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ —Å –∫–æ–º–∞–Ω–¥–æ–π –≤—ã—Å–æ–∫–æ–∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤, –Ω–∞—Å—Ç–æ—è—â–∏—Ö –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤ —Å–≤–æ–µ–≥–æ –¥–µ–ª–∞;
üî• –†–∞–±–æ—Ç—É –Ω–∞–¥ –º–∞—Å—à—Ç–∞–±–Ω—ã–º, –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º –∏ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω—ã–º –ø—Ä–æ–µ–∫—Ç–æ–º.


–ï—Å–ª–∏ –≤ —ç—Ç–æ–º –æ–ø–∏—Å–∞–Ω–∏–∏ –≤—ã —É–∑–Ω–∞–ª–∏  —Å–µ–±—è - –ø–∏—à–∏—Ç–µ. –û–±—Å—É–¥–∏–º –ø—Ä–æ–µ–∫—Ç, –∑–∞–¥–∞—á–∏ –∏ –≤—Å–µ –¥–µ—Ç–∞–ª–∏ :)  
  
–ü–∞–≤–µ–ª,  
‚úçÔ∏èTG: @pavel_hr  
üì´ papolushkin.wanted@gmail.com`

var RuTransiltMap = map[rune]string{
	'–∞': "a",
	'–±': "b",
	'–≤': "v",
	'–≥': "g",
	'–¥': "d",
	'–µ': "e",
	'—ë': "yo",
	'–∂': "zh",
	'–∑': "z",
	'–∏': "i",
	'–π': "j",
	'–∫': "k",
	'–ª': "l",
	'–º': "m",
	'–Ω': "n",
	'–æ': "o",
	'–ø': "p",
	'—Ä': "r",
	'—Å': "s",
	'—Ç': "t",
	'—É': "u",
	'—Ñ': "f",
	'—Ö': "h",
	'—Ü': "c",
	'—á': "ch",
	'—à': "sh",
	'—â': "sch",
	'—ä': "'",
	'—ã': "y",
	'—å': "",
	'—ç': "e",
	'—é': "ju",
	'—è': "ja",
}

func main() {
	fmt.Println("–î–ª–∏–Ω–∞ –¥–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ = ", len(data))
	newString := strings.ReplaceAll(data, "üôÇ", "=)")
	fmt.Println("–î–ª–∏–Ω–∞ –ø–æ—Å–ª–µ –∑–∞–º–µ–Ω—ã `üôÇ`  –Ω–∞ `=)`  = ", len(newString))
	translit := ""
	for k, i := range RuTransiltMap {
		if len(translit) == 0 {
			translit = strings.ReplaceAll(newString, string(k), i)
			translit = strings.ReplaceAll(translit, strings.ToUpper(string(k)), strings.ToTitle(i))
			continue
		}

		translit = strings.ReplaceAll(translit, string(k), i)
		translit = strings.ReplaceAll(translit, strings.ToUpper(string(k)), strings.ToTitle(i))

	}
	fmt.Println("–î–ª–∏–Ω–∞ –ø–æ—Å–ª–µ —Ç—Ä–∞–Ω—Å–ª–∏—Ç–∞ = ", len(translit))
	fmt.Println("–ö–æ–º–ø—Ä–µ—Å—Å–∏—è = ", float64(len(newString))/float64(len(translit)))
}
